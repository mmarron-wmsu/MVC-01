@model MuksanDemo.Areas.Security.Models.UserViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <header class="row content-header">
            <div class="col-md-6">
                <h2>Edit</h2>
            </div>
            <div class="col-md-6 content-action text-right">

                <a href="@Url.Action("Index")" class="btn btn-primary">
                    <span class="glyphicon glyphicon-remove"></span>Cancel

                </a>
                <button type="submit" value="Save" class="btn btn-success" />
                <span class="glyphicon glyphicon-saved"></span> Save
            </div>

        </header>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="editor-field">
                    @*@Html.EditorFor(model =>model.Gender)*@
                    @Html.RadioButtonFor(model => model.Gender, "Male", false) Male
                    <br/>  
                    @Html.RadioButtonFor(model => model.Gender, "Female", false) Female 
                    <br/>
                    @Html.RadioButtonFor(model => model.Gender, "Others", false) Others
                    @Html.ValidationMessageFor(model => model.Gender)<br /> 

                </div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        </div>
   
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
